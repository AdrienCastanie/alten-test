openapi: 3.0.3
info:
  title: Swagger Test Alten - Adrien Castani√©
  description: ''
  version: 1.0.0
servers:
- url: http://127.0.0.1:5000/api
  description: backend
tags:
  - name: products
    description: Everything about your products
paths:
  /products:
    get:
      tags:
        - products
      summary: Get all your products
      description: Get all products
      operationId: getProducts
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        '404':
          description: Products not found
    post:
      tags:
        - products
      summary: Create a new product
      description: Create a new product
      operationId: postProducts
      parameters:
      - in: "body"
        name: "body"
        description: "Product updated"
        required: true
        schema:
          $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Products not found
  /products/{product_id}:
    get:
      tags:
      - "products"
      summary: "Find product by ID"
      description: "Returns a single product"
      operationId: "getProductById"
      parameters:
      - name: "product_id"
        in: "path"
        description: "ID of product to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/components/schemas/Product'
        404:
          description: "Product not found"
    patch:
      tags:
      - "products"
      summary: "Updates a product"
      description: "Update a product"
      operationId: "updateProduct"
      parameters:
      - name: "product_id"
        in: "path"
        description: "ID of product that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Product updated"
        required: true
        schema:
          $ref: '#/components/schemas/Product'
      responses:
        200:
          description: "Successful operation"
        405:
          description: "Invalid input"
    delete:
      tags:
      - "products"
      summary: "Deletes a product"
      description: "Delete a product"
      operationId: "deleteProduct"
      parameters:
      - name: "product_id"
        in: "path"
        description: "Product id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
components:
  schemas:
    Products:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    Product:
      required:
        - id
        - code
        - name
        - description
        - price
        - quantity
        - inventoryStatus
        - category
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1029
        code:
          type: string
          example: gwuby345v
        name:
          type: string
          example: Yoga Set
        description:
          type: string
          example: Product Description
        price:
          type: integer
          format: int64
          example: 20
        quantity:
          type: integer
          format: int64
          example: 25
        inventoryStatus:
          type: string
          description: products inventory status
          enum:
            - INSTOCK
            - LOWSTOCK
            - OUTOFSTOCK
          example: INSTOCK
        category:
          type: string
          example: Fitness
        image:
          type: string
          example: "yoga-set.png"
        rating:
          type: integer
          format: int64
          example: 8
